args:
- default: true
  description: Incident to set context values in (Default is current incident)
  name: id
- description: The key to set
  name: key
  required: true
- description: The value to set to the key. Can be an array. Usually, a dq expression.
  name: value
  required: true
- auto: PREDEFINED
  defaultValue: "false"
  description: If false then the context key will be overwritten. If set to true then
    the script will append to existing context key
  name: append
  predefined:
  - "true"
  - "false"
- auto: PREDEFINED
  defaultValue: "false"
  description: Returns an error if not all of the incidents where modified.
  name: errorUnfinished
  predefined:
  - "true"
  - "false"
comment: |-
  Works the same as the 'Set' command, but can work across incidents by specifying 'id' as an argument.
  Sets a value into the context with the given context key. Doesn't append by default.

  This automation runs using the default Limited User role, unless you explicitly change the permissions.
  For more information, see the section about permissions here:
  https://docs-cortex.paloaltonetworks.com/r/Cortex-XSOAR/6.10/Cortex-XSOAR-Administrator-Guide/Automations
commonfields:
  id: SetByIncidentId
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.12.39
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: SetByIncidentId
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('SetByIncidentId', 'start', __line__())
  ### pack version: 1.12.39




  def main():
      incident_id = demisto.args()['id'] if 'id' in demisto.args() else demisto.incidents()[0]['id']
      key = demisto.args()['key']
      value = demisto.args()['value']
      append = demisto.args()['append']
      error_unfinished = argToBoolean(demisto.args().get('errorUnfinished', "false"))

      args = {'key': key, 'value': value, 'append': append}

      res = demisto.executeCommand(
          'executeCommandAt',
          {
              'incidents': incident_id,
              'command': 'Set',
              'arguments': args,
          }
      )
      if error_unfinished:
          result_string = res[-1].get('Contents', "")
          result_string = result_string.strip('.')
          numbers = [int(s) for s in result_string.split() if s.isdigit()]
          if len(set(numbers)) > 1:  # check if all the numbers are the same. Supposed to be 2 numbers.
              # if the numbers are the same, Set succeed on all of the incidents.
              return_error("Not all incidents were set.\n" + result_string)

      demisto.results(res)


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('SetByIncidentId', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- DemistoAPI
type: python

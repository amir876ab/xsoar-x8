args:
- description: A comma-separated list of indicators values. For example, for IP indicators,
    "1.1.1.1,2.2.2.2".
  isArray: true
  name: indicators_values
  required: true
- description: A comma-separated list of tags to add to the indicators. For example,
    "tag1,tag2,tag3".
  isArray: true
  name: tags
  required: true
comment: |-
  A wrapper script to the 'AppendindicatorField' script that enables adding tags to certain indicators.
  Note: You can use this script in an incident Layout button to allow tags to be added to indicators through the incident.
commonfields:
  id: AppendindicatorFieldWrapper
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.2.0
    itemVersion: 1.12.39
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
engineinfo: {}
mainengineinfo: {}
name: AppendindicatorFieldWrapper
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('AppendindicatorFieldWrapper', 'start', __line__())
  ### pack version: 1.12.39


  """
  A wrapper script to the 'AppendindicatorField' script, that enables adding tags to certain indicators.
  Note: You can use this script as a layout button that allows adding tags to indicators.
  """



  from typing import List

  ''' COMMAND FUNCTION '''


  def run_append_indicator_field_script(indicators_values: List, tags: List) -> CommandResults:
      """
      Run the 'appendIndicatorField' script in order to add the given tags to the given indicators.
      Args:
          indicators_values: The values of the indicators. For example, for an IP indicator, 1.1.1.1.
          tags: The values to add to the indicators tags.

      Returns: A CommandResults object contains the readable output string.

      """
      execute_command('appendIndicatorField',
                      {'indicatorsValues': indicators_values, 'field': 'tags', 'fieldValue': tags})

      readable_output = tableToMarkdown('The following tags were added successfully:',
                                        [{'Indicator': indicator, 'Tags': tags} for indicator in indicators_values])

      return CommandResults(
          outputs_prefix='AppendindicatorFieldWrapper',
          outputs_key_field='',
          readable_output=readable_output
      )


  ''' MAIN FUNCTION '''


  def main():
      args = demisto.args()
      indicators_values = argToList(args.get('indicators_values'))
      tags = argToList(args.get('tags'))

      try:
          # Handle missing arguments:
          if not indicators_values:
              raise Exception('Indicators values were not specified.')
          if not tags:
              raise Exception('Tags were not specified.')

          return_results(run_append_indicator_field_script(indicators_values, tags))

      except Exception as ex:
          return_error(f'Failed to execute AppendindicatorFieldWrapper. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('AppendindicatorFieldWrapper', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- incident-action-button
type: python

contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 2.5.2
    packID: CommonPlaybooks
    packName: Common Playbooks
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: |-
  This playbook blocks malicious indicators using all integrations that are enabled, using the following sub-playbooks:

  - Block URL - Generic v2
  - Block Account - Generic v2
  - Block IP - Generic v3
  - Block File - Generic v2
  - Block Email - Generic v2
  - Block Domain - Generic v2.
id: Block Indicators - Generic v3
inputs:
- description: 'An array of malicious IPs to block. Enter a comma-separated list of
    IPs (i.e.: 1.1.1.1,2.2.2.2).'
  key: IP
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: Indicator
      filters:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: ip
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Score
          operator: greaterThanOrEqual
          right:
            value:
              simple: "3"
      root: DBotScore
      transformers:
      - operator: uniq
- description: Array of malicious URLs to block.
  key: URL
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: Indicator
      filters:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: url
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Score
          operator: greaterThanOrEqual
          right:
            value:
              simple: "3"
      root: DBotScore
      transformers:
      - operator: uniq
- description: Array of malicious usernames to block.
  key: Username
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: Indicator
      filters:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: username
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Score
          operator: greaterThanOrEqual
          right:
            value:
              simple: "3"
      root: DBotScore
      transformers:
      - operator: uniq
- description: The MD5 hash of the file you want to block.
  key: MD5
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: Indicator
      filters:
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Indicator
          operator: stringHasLength
          right:
            value:
              simple: "32"
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Score
          operator: greaterThanOrEqual
          right:
            value:
              simple: "3"
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: file
        - left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: hash
      root: DBotScore
      transformers:
      - operator: uniq
- description: The SHA256 hash of the file you want to block.
  key: SHA256
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: Indicator
      filters:
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Indicator
          operator: stringHasLength
          right:
            value:
              simple: "64"
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Score
          operator: greaterThanOrEqual
          right:
            value:
              simple: "3"
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: file
        - left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: hash
      root: DBotScore
      transformers:
      - operator: uniq
- description: Array of malicious file hashes to block.
  key: FilesToBlock
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: Indicator
      filters:
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: file
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Score
          operator: greaterThanOrEqual
          right:
            value:
              simple: "3"
      root: DBotScore
      transformers:
      - operator: uniq
- description: The domain that you wish to block.
  key: DomainToBlock
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: Indicator
      filters:
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: domain
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Score
          operator: greaterThanOrEqual
          right:
            value:
              simple: "3"
      root: DBotScore
      transformers:
      - operator: uniq
- description: The email address that you wish to block.
  key: EmailToBlock
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: Indicator
      filters:
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Type
          operator: isEqualString
          right:
            value:
              simple: email
      - - left:
            iscontext: true
            value:
              simple: DBotScore.Score
          operator: greaterThanOrEqual
          right:
            value:
              simple: "3"
      root: DBotScore
      transformers:
      - operator: uniq
- description: |-
    Possible values: True/False.  Default: True.
    Should the given indicators be automatically blocked, or should the user be given the option to choose?

    If set to False - no prompt will appear, and all provided indicators will be blocked automatically.
    If set to True - the user will be prompted to select which indicators to block.
  key: AutoBlockIndicators
  playbookInputQuery: null
  required: false
  value:
    simple: "True"
- description: "This input determines whether Palo Alto Networks Panorama or Firewall
    Custom Block Rules are used.\nSpecify \"True\" to create new Custom Block Rules
    (2 FW rules inside the PAN-OS device). \nFor \"False\" - no rules will be created."
  key: CustomBlockRule
  playbookInputQuery: null
  required: false
  value:
    simple: "True"
- description: Panorama log forwarding object name. Indicate what type of Log Forwarding
    setting will be specified in the PAN-OS custom rules.
  key: LogForwarding
  playbookInputQuery: null
  required: false
  value: {}
- description: "This input determines whether to commit the configuration automatically
    on PAN-OS devices and other FWs. \nYes - Commit automatically.\nNo - Commit manually."
  key: AutoCommit
  playbookInputQuery: null
  required: false
  value:
    simple: "No"
- description: |-
    This input determines whether Palo Alto Networks Panorama or Firewall Static Address Groups are used.
    Specify the Static Address Group name for IPs list handling.
  key: StaticAddressGroup
  playbookInputQuery: null
  required: false
  value: {}
- description: Custom URL Category name.
  key: CustomURLCategory
  playbookInputQuery: null
  required: false
  value:
    simple: XSOAR Remediation - Malicious URLs
- description: Custom URL category type. Insert "URL List"/ "Category Match".
  key: type
  playbookInputQuery: null
  required: false
  value: {}
- description: Device group for the Custom URL Category (Panorama instances).
  key: device-group
  playbookInputQuery: null
  required: false
  value: {}
- description: The list of categories. Relevant from PAN-OS v9.x.
  key: categories
  playbookInputQuery: null
  required: false
  value: {}
- description: |-
    The Domain List ID to add the Domain to.
    product: Proofpoint Threat Response
  key: DomainBlackListID
  playbookInputQuery: null
  required: false
  value: {}
- description: Insert a tag name with which indicators will get tagged. This tag can
    be used later in the External Dynamic Lists integration by using the tag for filtering
    IPs in the indicator query.
  key: Tag
  playbookInputQuery: null
  required: false
  value:
    simple: Blocked Indicator In Systems
- description: |-
    This input determines whether Palo Alto Networks Panorama or Firewall Dynamic Address Groups are used.
    Specify the Dynamic Address Group tag name for IPs list handling.
  key: DAG
  playbookInputQuery: null
  required: false
  value: {}
- description: "Possible values: True/False.  Default: True.\nWhether to provide user
    verification for blocking those IPs. \n\nFalse - No prompt will be displayed to
    the user.\nTrue - The server will ask the user for blocking verification and will
    display the blocking list."
  key: UserVerification
  playbookInputQuery: null
  required: false
  value:
    simple: "True"
- description: 'A list of internal IP ranges to check IP addresses against. The list
    should be provided in CIDR notation, separated by commas. An example of a list
    of ranges would be: "172.16.0.0/12,10.0.0.0/8,192.168.0.0/16" (without quotes).
    If a list is not provided, will use the default list provided in the IsIPInRanges
    script (the known IPv4 private address ranges).'
  key: InternalRange
  playbookInputQuery: null
  required: false
  value: {}
- description: Signal Sciences WAF - Enter the site name for the integration to be
    applied. The site name can be found in your instance console.
  key: SiteName
  playbookInputQuery: null
  required: false
  value: {}
- description: Akamai's WAF network list ID, which is mandatory to be mentioned for
    the integration. The chosen IPs will be added to this ID.
  key: AkamaiNetworkListID
  playbookInputQuery: null
  required: false
  value: {}
- description: Cisco ASA (firewall) value for the rule's source object in the created
    blocking rule. Can be the value of an IPv4, an address block, or the name of a
    network object.
  key: CiscoFWSource
  playbookInputQuery: null
  required: false
  value: {}
- description: |-
    The rule name/description that will be presented on the created rule in certain integrations (if there is a need).
    The supported integrations: PAN-OS, CheckPoint.

    Default input- "XSOAR - Block IP playbook - ${incident.id}"
  key: InputEnrichment
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: |-
    The rule name/description that will be presented on the created rule in certain integrations (if there is a need).
    The supported integrations: PAN-OS, CheckPoint.

    Default input- "XSOAR - Block IP playbook - ${incident.id}"
  key: RuleName
  playbookInputQuery: null
  required: false
  value:
    simple: XSOAR - Block Indicators playbook - ${incident.id}
- description: |-
    Determine if a newly created rule should be with the network direction of outbound or inbound blocked traffic.
    Possible values: inbound or outbound
    Default: outbound
  key: RuleDirection
  playbookInputQuery: null
  required: false
  value:
    simple: outbound
- description: EDL Server IP Address
  key: EDLServerIP
  playbookInputQuery: null
  required: false
  value: {}
name: Block Indicators - Generic v3
outputs:
- contextPath: CheckpointFWRule.Domain
  description: Rule domain.
- contextPath: CheckpointFWRule.Enabled
  description: Rule status.
- contextPath: CheckpointFWRule.Name
  description: Rule name.
- contextPath: CheckpointFWRule.UID
  description: Rule UID.
- contextPath: CheckpointFWRule.Type
  description: Rule Type.
- contextPath: CheckpointFWRule.DestinationNegate
  description: Rule destination negate status (True/False).
- contextPath: CheckpointFWRule.Action
  description: 'Rule action (Valid values are: Accept, Drop, Apply Layer, Ask, Info).'
- contextPath: CheckpointFWRule.Destination
  description: Rule Destination.
- contextPath: CheckpointFWRule.ActionSetting
  description: Rule action settings.
- contextPath: CheckpointFWRule.CustomFields
  description: Rule custom fields.
- contextPath: CheckpointFWRule.Data
  description: Rule data.
- contextPath: CheckpointFWRule.DataDirection
  description: Rule data direction.
- contextPath: CheckpointFWRule.DataNegate
  description: Rule data negate status (True/False).
- contextPath: CheckpointFWRule.Hits
  description: Rule hits count.
- contextPath: PanoramaRule.Direction
  description: Direction of the Panorama rule. Can be 'to','from', 'both'.
  type: string
- contextPath: PanoramaRule.IP
  description: The IP the Panorama rule blocks.
  type: string
- contextPath: PanoramaRule.Name
  description: Name of the Panorama rule.
  type: string
- contextPath: CheckpointFWRule.Data.Name
  description: Rule data object name.
- contextPath: CheckpointFWRule.Data.Domain
  description: Information about the domain the data object belongs to.
- contextPath: CheckpointFWRule.Domain.Name
  description: Rule domain name.
- contextPath: CheckpointFWRule.Domain.UID
  description: Rule domain UID.
- contextPath: CheckpointFWRule.Domain.Type
  description: Rule domain type.
- contextPath: CheckpointFWRule.Hits.FirstDate
  description: The date of the first hit for the rule.
- contextPath: CheckpointFWRule.Hits.LastDate
  description: The date of the last hit for the rule.
- contextPath: CheckpointFWRule.Hits.Level
  description: Level of rule hits.
- contextPath: CheckpointFWRule.Hits.Percentage
  description: Percentage of rule hits.
- contextPath: CheckpointFWRule.Hits.Value
  description: Value of rule hits.
- contextPath: IndicatorsToBlock
  description: Selected indicators to block.
  type: unknown
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "27"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: be855f8e-b0d6-4b33-8898-954bf9ba99cc
      iscommand: false
      name: ""
      version: -1
    taskid: be855f8e-b0d6-4b33-8898-954bf9ba99cc
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 1125,
          "y": -870
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: c155d55d-f7f3-4af2-8739-3cb6143e0e81
      iscommand: false
      name: Tag Indicators
      type: title
      version: -1
    taskid: c155d55d-f7f3-4af2-8739-3cb6143e0e81
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1125,
          "y": 515
        }
      }
  "7":
    continueonerrortype: ""
    id: "7"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "10"
      - "13"
      - "17"
      - "18"
      - "25"
      - "24"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 15d43128-6c48-4deb-8ed0-044d0454fa7b
      iscommand: false
      name: Block indicators
      type: title
      version: -1
    taskid: 15d43128-6c48-4deb-8ed0-044d0454fa7b
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1125,
          "y": 195
        }
      }
  "10":
    continueonerrortype: ""
    id: "10"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      Hash:
        complex:
          root: inputs.AutoBlockIndicators
          transformers:
          - args:
              condition:
                value:
                  simple: lhs==rhs
              conditionB: {}
              conditionInBetween: {}
              else:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.2
              equals: {}
              lhs:
                iscontext: true
                value:
                  simple: inputs.AutoBlockIndicators
              lhsB: {}
              options: {}
              optionsB: {}
              rhs:
                value:
                  simple: "True"
              rhsB: {}
              then:
                iscontext: true
                value:
                  simple: inputs.FilesToBlock
            operator: If-Then-Else
      MD5:
        complex:
          root: inputs.MD5
      SHA256:
        complex:
          root: inputs.SHA256
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      description: "This playbook is used to block files from running on endpoints.
        \nThis playbook supports the following integrations:\n- Palo Alto Networks
        Traps\n- Palo Alto Networks Cortex XDR\n- Cybereason\n- Carbon Black Enterprise
        Response\n- Cylance Protect v2\n"
      id: 97b85f3e-e339-490d-8f4c-7a188cfc0f25
      iscommand: false
      name: Block File - Generic v2
      playbookId: Block File - Generic v2
      type: playbook
      version: -1
    taskid: 97b85f3e-e339-490d-8f4c-7a188cfc0f25
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 910,
          "y": 340
        }
      }
  "13":
    continueonerrortype: ""
    id: "13"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      AkamaiNetworkListID:
        complex:
          root: inputs.AkamaiNetworkListID
      AutoCommit:
        complex:
          root: inputs.AutoCommit
      CiscoFWSource:
        complex:
          root: inputs.CiscoFWSource
      CustomBlockRule:
        complex:
          root: inputs.CustomBlockRule
      DAG:
        complex:
          root: inputs.DAG
      IP:
        complex:
          root: inputs.AutoBlockIndicators
          transformers:
          - args:
              condition:
                value:
                  simple: lhs==rhs
              conditionB: {}
              conditionInBetween: {}
              else:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.0
              equals: {}
              lhs:
                iscontext: true
                value:
                  simple: inputs.AutoBlockIndicators
              lhsB: {}
              options: {}
              optionsB: {}
              rhs:
                value:
                  simple: "True"
              rhsB: {}
              then:
                iscontext: true
                value:
                  simple: inputs.IP
            operator: If-Then-Else
      InputEnrichment:
        complex:
          root: inputs.InputEnrichment
      InternalRange:
        complex:
          root: inputs.InternalRange
      LogForwarding:
        complex:
          root: inputs.LogForwarding
      RuleDirection:
        complex:
          root: inputs.RuleDirection
      RuleName:
        complex:
          root: inputs.RuleName
      SiteName:
        complex:
          root: inputs.SiteName
      StaticAddressGroup:
        complex:
          root: inputs.StaticAddressGroup
      Tag:
        complex:
          root: inputs.Tag
      UserVerification:
        complex:
          root: inputs.UserVerification
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      description: "This playbook blocks malicious IP addresses using all integrations
        that are enabled. The direction of the traffic that will be blocked is determined
        by the XSOAR user (and set by default to outgoing)\nNote the following:\n-
        \ some of those integrations require specific parameters to run, which are
        based on the playbook inputs. Also, certain integrations use FW rules or appended
        network objects.\n- Note that the appended network objects should be specified
        in blocking rules inside the system later on. \n\n\nSupported integrations
        for this playbook [Network security products such as FW/WAF/IPs/etc.]: \n\n*
        Check Point Firewall\n* Palo Alto Networks PAN-OS\n* Zscaler\n* FortiGate\n*
        Aria Packet Intelligence\n* Cisco Firepower \n* Cisco Secure Cloud Analytics\n*
        Cisco ASA\n* Akamai WAF\n* F5 SilverLine\n* ThreatX\n* Signal Sciences WAF\n*
        Sophos Firewall\n\n"
      id: 53c7faa6-ec4b-46c0-8322-71972e65dad0
      iscommand: false
      name: Block IP - Generic v3
      playbookId: Block IP - Generic v3
      type: playbook
      version: -1
    taskid: 53c7faa6-ec4b-46c0-8322-71972e65dad0
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 2200,
          "y": 340
        }
      }
  "14":
    continueonerrortype: ""
    id: "14"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 22f0eb38-c4d3-4e67-889b-6abbff216ab8
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 22f0eb38-c4d3-4e67-889b-6abbff216ab8
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1125,
          "y": 1005
        }
      }
  "15":
    continueonerrortype: ""
    id: "15"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "14"
    note: false
    quietmode: 0
    scriptarguments:
      field:
        simple: tags
      fieldValue:
        complex:
          root: inputs.Tag
      indicatorsValues:
        complex:
          root: IndicatorsToBlock
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.add.values.to.indicator.multi.select.field
      id: 8e6165ed-cc2e-4820-8ae4-c73fd82a3088
      iscommand: true
      name: Tag bad indicators
      script: Builtin|||appendIndicatorField
      type: regular
      version: -1
    taskid: 8e6165ed-cc2e-4820-8ae4-c73fd82a3088
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1390,
          "y": 820
        }
      }
  "17":
    continueonerrortype: ""
    id: "17"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      Tag:
        simple: Bad Account
      UserVerification:
        complex:
          root: inputs.UserVerification
      Username:
        complex:
          root: inputs.AutoBlockIndicators
          transformers:
          - args:
              condition:
                value:
                  simple: lhs==rhs
              conditionB: {}
              conditionInBetween: {}
              else:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.3
              equals: {}
              lhs:
                iscontext: true
                value:
                  simple: inputs.AutoBlockIndicators
              lhsB: {}
              options: {}
              optionsB: {}
              rhs:
                value:
                  simple: "True"
              rhsB: {}
              then:
                iscontext: true
                value:
                  simple: inputs.Username
            operator: If-Then-Else
          - operator: uniq
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      description: |-
        This playbook blocks malicious usernames using all integrations that you have enabled.

        Supported integrations for this playbook:
        * Active Directory
        * PAN-OS - This requires PAN-OS 9.1 or higher.
        * SailPoint
        * PingOne
        * AWS IAM
        * Clarizen IAM
        * Envoy IAM
        * ExceedLMS IAM
        * Okta
      id: f12b6207-b78c-4cde-8f3d-2cbd8c3e0d56
      iscommand: false
      name: Block Account - Generic v2
      playbookId: Block Account - Generic v2
      type: playbook
      version: -1
    taskid: f12b6207-b78c-4cde-8f3d-2cbd8c3e0d56
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 480,
          "y": 340
        }
      }
  "18":
    continueonerrortype: ""
    id: "18"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      AutoCommit:
        complex:
          root: inputs.AutoCommit
      CustomURLCategory:
        complex:
          root: inputs.CustomURLCategory
      EDLServerIP:
        complex:
          root: inputs.EDLServerIP
      LogForwarding:
        complex:
          root: inputs.LogForwarding
      Tag:
        complex:
          root: inputs.Tag
      URL:
        complex:
          root: inputs.AutoBlockIndicators
          transformers:
          - args:
              condition:
                value:
                  simple: lhs==rhs
              conditionB: {}
              conditionInBetween: {}
              else:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.1
              equals: {}
              lhs:
                iscontext: true
                value:
                  simple: inputs.AutoBlockIndicators
              lhsB: {}
              options: {}
              optionsB: {}
              rhs:
                value:
                  simple: "True"
              rhsB: {}
              then:
                iscontext: true
                value:
                  simple: inputs.URL
            operator: If-Then-Else
      UserVerification:
        complex:
          root: inputs.UserVerification
      categories:
        complex:
          root: inputs.categories
      device-group:
        complex:
          root: inputs.device-group
      type:
        complex:
          root: inputs.type
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      id: ac24ec10-63b4-46ed-8c10-ae50147ac064
      iscommand: false
      name: Block URL - Generic v2
      playbookId: Block URL - Generic v2
      type: playbook
      version: -1
    taskid: ac24ec10-63b4-46ed-8c10-ae50147ac064
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 340
        }
      }
  "19":
    continueonerrortype: ""
    form:
      description: Select which indicators to block.
      expired: false
      questions:
      - defaultrows: []
        fieldassociated: ""
        gridcolumns: []
        id: "0"
        label: ""
        labelarg:
          simple: Select IPs to block
        options: []
        optionsarg:
        - complex:
            root: inputs.IP
            transformers:
            - operator: uniq
        placeholder: ""
        readonly: false
        required: false
        tooltip: ""
        type: multiSelect
      - defaultrows: []
        fieldassociated: ""
        gridcolumns: []
        id: "1"
        label: ""
        labelarg:
          simple: Select URLs to block
        options: []
        optionsarg:
        - complex:
            root: inputs.URL
            transformers:
            - operator: uniq
        placeholder: ""
        readonly: false
        required: false
        tooltip: ""
        type: multiSelect
      - defaultrows: []
        fieldassociated: ""
        gridcolumns: []
        id: "2"
        label: ""
        labelarg:
          simple: Select files to block
        options: []
        optionsarg:
        - complex:
            root: inputs.MD5
            transformers:
            - args:
                item:
                  iscontext: true
                  value:
                    simple: inputs.SHA256
              operator: append
            - args:
                item:
                  iscontext: true
                  value:
                    simple: inputs.FilesToBlock
              operator: append
            - operator: uniq
        placeholder: ""
        readonly: false
        required: false
        tooltip: ""
        type: multiSelect
      - defaultrows: []
        fieldassociated: ""
        gridcolumns: []
        id: "3"
        label: ""
        labelarg:
          simple: Select users to block
        options: []
        optionsarg:
        - complex:
            root: inputs.Username
        placeholder: ""
        readonly: false
        required: false
        tooltip: ""
        type: multiSelect
      - defaultrows: []
        fieldassociated: ""
        gridcolumns: []
        id: "4"
        label: ""
        labelarg:
          simple: Select emails to block
        options: []
        optionsarg:
        - complex:
            root: inputs.EmailToBlock
            transformers:
            - operator: uniq
        placeholder: ""
        readonly: false
        required: false
        tooltip: ""
        type: multiSelect
      - defaultrows: []
        fieldassociated: ""
        gridcolumns: []
        id: "5"
        label: ""
        labelarg:
          simple: Select domains to block
        options: []
        optionsarg:
        - complex:
            root: inputs.DomainToBlock
            transformers:
            - operator: uniq
        placeholder: ""
        readonly: false
        required: false
        tooltip: ""
        type: multiSelect
      sender: ""
      title: Which indicators would you like to block?
      totalanswers: 0
    id: "19"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    message:
      bcc: null
      body: null
      cc: null
      format: ""
      methods: []
      subject: null
      timings:
        completeafterreplies: 1
        completeaftersla: false
        completeafterv2: true
        retriescount: 2
        retriesinterval: 360
      to: null
    nexttasks:
      '#none#':
      - "21"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Select which indicators to block.
      id: 0d20c35f-5bdf-4b27-8b63-f5334f9342f5
      iscommand: false
      name: Which indicators would you like to block?
      type: collection
      version: -1
    taskid: 0d20c35f-5bdf-4b27-8b63-f5334f9342f5
    timertriggers: []
    type: collection
    view: |-
      {
        "position": {
          "x": 680,
          "y": -330
        }
      }
  "20":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              complex:
                root: inputs.AutoBlockIndicators
          operator: isEqualString
          right:
            value:
              simple: "true"
      label: "yes"
    continueonerrortype: ""
    id: "20"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "19"
      "yes":
      - "22"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the AutoBlockIndicators input is set to 'True'
      id: 8a156613-e43b-4bf2-857c-159220291b3b
      iscommand: false
      name: Block Indicators Automatically?
      type: condition
      version: -1
    taskid: 8a156613-e43b-4bf2-857c-159220291b3b
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1125,
          "y": -500
        }
      }
  "21":
    continueonerrortype: ""
    id: "21"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "23"
    note: false
    quietmode: 0
    reputationcalc: 2
    scriptarguments:
      key:
        simple: IndicatorsToBlock
      value:
        complex:
          accessor: "0"
          root: Which indicators would you like to block?.Answers
          transformers:
          - args:
              item:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.1
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.2
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.3
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.4
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.5
            operator: append
          - operator: uniq
          - args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: No indicators to block
            operator: SetIfEmpty
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: ca92498f-ebc4-4e68-81e9-44e1c6907d9d
      iscommand: false
      name: Set indicators to block - Manual
      script: Set
      type: regular
      version: -1
    taskid: ca92498f-ebc4-4e68-81e9-44e1c6907d9d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 680,
          "y": -170
        }
      }
  "22":
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "23"
    note: false
    quietmode: 0
    reputationcalc: 2
    scriptarguments:
      key:
        simple: IndicatorsToBlock
      value:
        complex:
          root: inputs.IP
          transformers:
          - args:
              item:
                iscontext: true
                value:
                  simple: inputs.URL
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: inputs.Username
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: inputs.MD5
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: inputs.SHA256
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: inputs.EmailToBlock
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: inputs.DomainToBlock
            operator: append
          - args:
              item:
                iscontext: true
                value:
                  simple: inputs.FilesToBlock
            operator: append
          - operator: uniq
          - args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: No indicators to block
            operator: SetIfEmpty
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 6cabb94a-1422-4d97-89ee-5b35b328c70b
      iscommand: false
      name: Set indicators to block - Auto
      script: Set
      type: regular
      version: -1
    taskid: 6cabb94a-1422-4d97-89ee-5b35b328c70b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1125,
          "y": -170
        }
      }
  "23":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: IndicatorsToBlock
          operator: isNotEqualString
          right:
            value:
              simple: No indicators to block
      label: "yes"
    continueonerrortype: ""
    id: "23"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "14"
      "yes":
      - "7"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether there are indicators to block.
      id: 92a68f14-96ed-4e6f-880f-dde5980b1fc2
      iscommand: false
      name: Has indicators to block?
      type: condition
      version: -1
    taskid: 92a68f14-96ed-4e6f-880f-dde5980b1fc2
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1125,
          "y": 30
        }
      }
  "24":
    continueonerrortype: ""
    id: "24"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      Domain:
        complex:
          root: inputs.AutoBlockIndicators
          transformers:
          - args:
              condition:
                value:
                  simple: lhs==rhs
              conditionB: {}
              conditionInBetween: {}
              else:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.5
              equals: {}
              lhs:
                iscontext: true
                value:
                  simple: inputs.AutoBlockIndicators
              lhsB: {}
              options: {}
              optionsB: {}
              rhs:
                value:
                  simple: "True"
              rhsB: {}
              then:
                iscontext: true
                value:
                  simple: inputs.DomainToBlock
            operator: If-Then-Else
      DomainBlackListID:
        complex:
          root: inputs.DomainBlackListID
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      id: 8be5d5f6-b142-415a-8669-90965b645964
      iscommand: false
      name: Block Domain - Generic v2
      playbookId: Block Domain - Generic v2
      type: playbook
      version: -1
    taskid: 8be5d5f6-b142-415a-8669-90965b645964
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 1770,
          "y": 340
        }
      }
  "25":
    continueonerrortype: ""
    id: "25"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      EmailToBlock:
        complex:
          root: inputs.AutoBlockIndicators
          transformers:
          - args:
              condition:
                value:
                  simple: lhs==rhs
              conditionB: {}
              conditionInBetween: {}
              else:
                iscontext: true
                value:
                  simple: Which indicators would you like to block?.Answers.4
              equals: {}
              lhs:
                iscontext: true
                value:
                  simple: inputs.AutoBlockIndicators
              lhsB: {}
              options: {}
              optionsB: {}
              rhs:
                value:
                  simple: "True"
              rhsB: {}
              then:
                iscontext: true
                value:
                  simple: inputs.EmailToBlock
            operator: If-Then-Else
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      id: eb042e15-af15-4142-8fa9-f05d0d283499
      iscommand: false
      name: Block Email - Generic v2
      playbookId: Block Email - Generic v2
      type: playbook
      version: -1
    taskid: eb042e15-af15-4142-8fa9-f05d0d283499
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 340
        }
      }
  "26":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.Tag
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "26"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "14"
      "yes":
      - "15"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether a tag for blocked indicators was specified.
      id: ee795eae-1fc0-4458-864b-91b2f224db89
      iscommand: false
      name: Tag received from inputs?
      type: condition
      version: -1
    taskid: ee795eae-1fc0-4458-864b-91b2f224db89
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1125,
          "y": 650
        }
      }
  "27":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.IP
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.URL
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.Username
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.MD5
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.SHA256
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.FilesToBlock
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.DomainToBlock
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              complex:
                root: inputs.EmailToBlock
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "27"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "28"
      "yes":
      - "20"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 4b64da5f-53b9-4fdd-8e65-5a133c6700d6
      iscommand: false
      name: Are there indicators to block?
      type: condition
      version: -1
    taskid: 4b64da5f-53b9-4fdd-8e65-5a133c6700d6
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1125,
          "y": -700
        }
      }
  "28":
    continueonerrortype: ""
    id: "28"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: f0a6c388-3821-4ad0-8720-6660caa31997
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: f0a6c388-3821-4ad0-8720-6660caa31997
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1590,
          "y": -500
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "27_20_yes": 0.4
    },
    "paper": {
      "dimensions": {
        "height": 1940,
        "width": 2530,
        "x": 50,
        "y": -870
      }
    }
  }

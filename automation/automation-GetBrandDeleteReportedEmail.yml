comment: Gets all the enabled instances of integrations that can be used by the DeleteReportedEmail
  script, in the output format of a single select field.
commonfields:
  id: GetBrandDeleteReportedEmail
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.1.0
    itemVersion: 3.5.30
    packID: Phishing
    packName: Phishing
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.68300
enabled: true
engineinfo: {}
mainengineinfo: {}
name: GetBrandDeleteReportedEmail
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('GetBrandDeleteReportedEmail', 'start', __line__())
  ### pack version: 3.5.30



  EMAIL_INTEGRATIONS = ['Gmail', 'EWSO365', 'EWS v2', 'Agari Phishing Defense', 'MicrosoftGraphMail',
                        'SecurityAndCompliance', 'SecurityAndComplianceV2']


  def get_delete_reported_email_integrations():
      """
      Get all enabled integration instances that can be used for deleting an email using the DeleteReportedEmail script.
      Returns:
          List of enabled integrations suitable for the DeleteReportedEmail script.

      """
      instances = demisto.getModules()
      return [data.get('brand') for data in instances.values() if data.get('state') == 'active' and data.get('brand')
              in EMAIL_INTEGRATIONS]


  def main():
      try:
          return_results({"hidden": False,
                          "options": get_delete_reported_email_integrations()
                          })

      except Exception as err:
          return_error(str(err), error=traceback.format_exc())


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('GetBrandDeleteReportedEmail', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- field-display
type: python

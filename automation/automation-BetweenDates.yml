args:
- description: Value to check.
  name: value
  required: true
- description: Lower date range.
  name: begin_date
  required: true
- description: Upper date range.
  name: end_date
  required: true
comment: Whether value is within a date range.
commonfields:
  id: BetweenDates
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.2.51
    packID: FiltersAndTransformers
    packName: Filters And Transformers
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.83255
enabled: true
engineinfo: {}
mainengineinfo: {}
name: BetweenDates
outputs:
- contextPath: BetweenDates.result
  description: Whether the input hour is between the given hours.
  type: boolean
- contextPath: BetweenDates.value
  description: The value to check.
  type: string
- contextPath: BetweenDates.begin_date
  description: Lower date range.
  type: string
- contextPath: BetweenDates.end_date
  description: Upper date range.
  type: string
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('BetweenDates', 'start', __line__())
  ### pack version: 1.2.51


  import dateparser


  def is_between_dates(value, begin_date, end_date):
      input_time = dateparser.parse(value)
      start_time = dateparser.parse(begin_date)
      end_time = dateparser.parse(end_date)

      return start_time <= input_time <= end_time  # type: ignore


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      args = demisto.args()
      value, begin_date, end_date = args['value'], args['begin_date'], args['end_date']

      result = is_between_dates(value, begin_date, end_date)

      output = {"value": value, "begin_date": begin_date, "end_date": end_date, "result": result}
      human_readable = f'# BetweenDates\n' \
          f'The date *{value}* {"*IS*" if result else "*IS NOT*"} between *{begin_date}* and *{end_date}*'

      return_results(CommandResults(outputs_prefix="BetweenDates", readable_output=human_readable, outputs=result))

  register_module_line('BetweenDates', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- transformer
- date
type: python

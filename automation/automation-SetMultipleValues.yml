args:
- default: true
  description: The parent key to which we append all the other keys
  name: parent
  required: true
- description: Comma separated list of keys
  name: keys
  required: true
- description: Comma separated list of values
  name: values
  required: true
comment: Set multiple keys/values to the context.
commonfields:
  id: SetMultipleValues
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.13.16
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: SetMultipleValues
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('SetMultipleValues', 'start', __line__())
  ### pack version: 1.13.16




  def main():
      keys = [k.strip() for k in demisto.args()['keys'].split(',')]
      values_str = demisto.args()['values']
      if '[' in values_str and ']' in values_str:
          values_str = f'[{values_str}]'
      values = argToList(values_str)

      ec = {demisto.args()['parent'] + '(true)': dict(zip(keys, values))}
      demisto.results({'Type': entryTypes['note'], 'Contents': ec, 'ContentsFormat': formats['json'],
                       'HumanReadable': 'Keys ' + ','.join(keys) + ' set', 'EntryContext': ec})


  if __name__ in ('__main__', '__builtin__', 'builtins'):  # pragma: no cover
      main()

  register_module_line('SetMultipleValues', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- Utility
type: python

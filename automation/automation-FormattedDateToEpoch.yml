args:
- description: Time stamp to convert
  name: value
  required: true
- description: Python 'strptime' formatter string
  name: formatter
comment: 'Converts a custom-formatted timestamp to UNIX epoch time. Use it to convert
  custom time stamps to a XSOAR date field. If you pass formatter argument, we will
  use it to transform. If not, we will use dateparser.parse for transforming. For
  more info, see: https://docs.python.org/3.7/library/datetime.html#strftime-and-strptime-behavior'
commonfields:
  id: FormattedDateToEpoch
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.2.35
    packID: FiltersAndTransformers
    packName: Filters And Transformers
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: FormattedDateToEpoch
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('FormattedDateToEpoch', 'start', __line__())
  ### pack version: 1.2.35

  import dateparser
  from datetime import datetime, timezone
  from typing import Optional


  def date_to_epoch(date: str, formatter: Optional[str] = None) -> int:
      epoch = datetime(1970, 1, 1, tzinfo=timezone.utc)
      date_obj = datetime.strptime(date, formatter) if formatter \
          else dateparser.parse(date, settings={'RELATIVE_BASE': datetime(1900, 1, 1)})
      assert date_obj is not None, f'could not parse {date}'
      return int(date_obj.strftime('%s') if date_obj.tzinfo is None else (date_obj - epoch).total_seconds())


  def main():
      args = demisto.args()
      date_value = args['value']
      formatter = args.get('formatter')
      demisto.results(date_to_epoch(date_value, formatter))


  # python2 uses __builtin__ python3 uses builtins
  if __name__ == "__builtin__" or __name__ == "builtins":
      main()

  register_module_line('FormattedDateToEpoch', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- transformer
- date
type: python

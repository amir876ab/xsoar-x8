args:
- description: Data to be encoded
  name: data
  required: true
comment: Input Text Data to Encode as ASCII (Ignores any chars that aren't interpreted
  as ASCII)
commonfields:
  id: EncodeToAscii
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.13.16
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: EncodeToAscii
outputs:
- contextPath: asciiencode.encoded
  description: Data encoded in ASCII
  type: string
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('EncodeToAscii', 'start', __line__())
  ### pack version: 1.13.16



  ''' MAIN FUNCTION '''


  def main():
      # Grab 'data' from Demisto Arguments
      data = demisto.args()['data']

      # Encode the data, ignoring characters
      try:
          encoded_data = data.encode('ascii', 'ignore').decode("utf-8")
      except Exception as e:
          return_error(f'There was an error encoding the data.\nError:\n{str(e)}')

      # Output the data and add results to war room
      return_results(CommandResults(
          readable_output=f'Success: {encoded_data}',
          outputs_prefix='asciiencode.encoded',
          outputs=encoded_data))


  ''' ENTRY POINT '''
  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('EncodeToAscii', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags: []
type: python

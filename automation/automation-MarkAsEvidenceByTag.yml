args:
- default: true
  description: Entries with the given tag will be marked as evidence
  name: tag
  required: true
- description: Description for the Evidence item
  name: description
  required: true
comment: Mark entries as evidence if they are tagged with given tag
commonfields:
  id: MarkAsEvidenceByTag
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 1.12.39
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: MarkAsEvidenceByTag
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('MarkAsEvidenceByTag', 'start', __line__())
  ### pack version: 1.12.39



  entries = demisto.executeCommand('getEntries', {})
  if isError(entries[0]):
      demisto.results({'Type': entryTypes['error'], 'ContentsFormat': formats['text'], 'Contents': 'Unable to retrieve entries'})
  else:
      ids = []
      for e in entries:
          tags = e.get('Metadata', {}).get('tags')
          if not tags:
              tags = []
          if demisto.getArg('tag') in tags:
              ids.append(e['Metadata']['id'])
      if len(ids) > 0:
          for i in ids:
              demisto.results(demisto.executeCommand("markAsEvidence", {"id": i, "description": demisto.getArg('description')}))
      else:
          demisto.results({'Type': entryTypes['note'], 'ContentsFormat': formats['text'],
                           'Contents': "No entries with '" + demisto.getArg('tag') + "' found"})

  register_module_line('MarkAsEvidenceByTag', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- Utility
type: python

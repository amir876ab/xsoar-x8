args:
- description: Value to check if in range (e.g. 4).
  name: left
  required: true
- description: Range to check against with the form of from,to (e.g. 2,8).
  name: right
  required: true
comment: |-
  checks if left side is in range of right side (from,to anotation)
  e.g. - InRange left=4right=1,8 will return true.
commonfields:
  id: InRange
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.2.51
    packID: FiltersAndTransformers
    packName: Filters And Transformers
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: InRange
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('InRange', 'start', __line__())
  ### pack version: 1.2.51



  INVALID_ARG = "INVALID_ARG"


  def to_float(s):
      try:
          return float(s)
      except Exception:
          return INVALID_ARG


  # "1,8" => will return a tupple (1, 8)


  def parse_range(rangeStr):
      splitted = rangeStr.split(",")
      if len(splitted) < 2:
          return INVALID_ARG, INVALID_ARG

      # parse
      return to_float(splitted[0]), to_float(splitted[1])


  def main():
      leftArg = demisto.args()["left"]
      rightArg = demisto.args()["right"]

      left = to_float(leftArg)
      fromRange, toRange = parse_range(rightArg)

      if INVALID_ARG in [left, fromRange, toRange]:
          demisto.error(
              "InRange - invalid arguments. left shuld be a number, right should be from,to (e.g. '1,8'). "
              "got left - %s, right - %s" % (leftArg, rightArg))
          demisto.results(False)
      else:
          demisto.results(left >= fromRange and left <= toRange)


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('InRange', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- filter
- number
type: python

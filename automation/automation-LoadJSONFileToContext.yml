args:
- description: The Entry ID of the JSON file to load into context.
  name: entryID
  required: true
- defaultValue: JSON
  description: The context key to put the loaded JSON under, default is JSON.
  name: contextKey
comment: Loads a JSON file from the war room to context.
commonfields:
  id: LoadJSONFileToContext
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 1.12.47
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: LoadJSONFileToContext
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('LoadJSONFileToContext', 'start', __line__())
  ### pack version: 1.12.47



  file_id = demisto.args().get("entryID")
  context_key = demisto.args().get("contextKey")

  # get the file path, for the above file.
  res = demisto.getFilePath(file_id)
  if not res:
      return_error(f"Entry {file_id} not found")

  file_path = res.get('path')

  # open the file, and try and load the JSON, error if it's invalid.
  with open(file_path, 'r') as f:
      try:
          data = json.load(f)
      except ValueError as e:
          return_error(f"File is not valid JSON: {e}")
      except Exception:
          return_error("Something else went wrong...")

  # return the results to context
  results = CommandResults(
      readable_output=f"Loaded JSON to context key: {context_key} from file.",
      outputs_prefix=context_key,
      outputs=data,
      ignore_auto_extract=True)

  return_results(results)

  register_module_line('LoadJSONFileToContext', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- Utility
type: python

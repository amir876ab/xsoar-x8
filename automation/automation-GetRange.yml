args:
- default: true
  description: A comma-separated list of indexes or ranges of to retrieve (e.g., 0,1-3,6-7).
  isArray: true
  name: range
  required: true
- default: true
  description: The list to transform.
  isArray: true
  name: value
  required: true
comment: Gets specified indexes of a list.
commonfields:
  id: GetRange
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.5.0
    itemVersion: 1.2.51
    packID: FiltersAndTransformers
    packName: Filters And Transformers
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: GetRange
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('GetRange', 'start', __line__())
  ### pack version: 1.2.51


  import traceback


  def get_range_command(indexes: List[str], val: List[Any]) -> List[Any]:
      """
           Filter list with a given range.
           Args:
               indexes (list): indexes to filter.
               val (list): list to filter .
           Returns:
               filtered list.
       """
      result = []
      for index in indexes:
          if '-' in str(index):
              start, end = index.split('-')
              start = int(start) if start else 0
              end = int(end) if end else len(val)
              for element in val[start:end + 1]:
                  result.append(element)
          else:
              result.append(val[int(index)])
      return result


  def main():
      try:
          args = demisto.args()
          val = safe_load_json(args.get('value', ''))
          indexes = argToList(args.get('range', ''))
          return_results(results=get_range_command(indexes, val))
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute GetRange. Error: {str(ex)}')


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('GetRange', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- transformer
- general
- entirelist
type: python

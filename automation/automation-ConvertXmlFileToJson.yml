args:
- default: true
  description: Entry ID of a valid xml file to convert to json format.
  name: entryID
  required: true
- description: The context key to push json result to.
  name: contextKey
- auto: PREDEFINED
  defaultValue: "True"
  description: Print json result to warrom.
  name: verbose
  predefined:
  - "True"
  - "False"
comment: Converts XML file entry to JSON format
commonfields:
  id: ConvertXmlFileToJson
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.12.39
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/xml-feed:1.0.0.65027
enabled: true
engineinfo: {}
mainengineinfo: {}
name: ConvertXmlFileToJson
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('ConvertXmlFileToJson', 'start', __line__())
  ### pack version: 1.12.39


  import xmltodict


  def convert_file(entry_id: str, verbose: bool, context_key: str) -> None:
      """
      Converts file content from XML to Json
      Args:
          entry_id: The entry id represents the file.
          verbose: Whether to print the json result to the warroom.
          context_key: The key to insert the json data to.
      """
      xml_file = demisto.getFilePath(entry_id).get("path", "")
      with open(xml_file, 'rb') as xml:
          xml_json = xmltodict.parse(xml)
      if verbose:
          return_results(xml_json)
      if context_key:
          appendContext(key=context_key, data=xml_json)


  def main():  # pragma: no cover
      args = demisto.args()
      entry_id = args.get("entryID", "")
      verbose = argToBoolean(args.get("verbose", False))
      context_key = args.get("contextKey", "")
      try:
          convert_file(entry_id, verbose, context_key)
      except Exception as e:
          return_error(f"Convert XML File to Json Failed: Error: {str(e)}")


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('ConvertXmlFileToJson', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- Utility
type: python

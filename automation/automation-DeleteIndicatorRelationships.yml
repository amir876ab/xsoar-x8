args:
- default: true
  description: The IDs of the relationships to delete. Can accept a list of ID's.
  isArray: true
  name: ids
  required: true
comment: This automation allows to delete a relationship between indicator objects
  based on the relationship id.
commonfields:
  id: DeleteIndicatorRelationships
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.2.0
    itemVersion: 1.32.47
    packID: Base
    packName: Base
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
engineinfo: {}
mainengineinfo: {}
name: DeleteIndicatorRelationships
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('DeleteIndicatorRelationships', 'start', __line__())
  ### pack version: 1.32.47




  ''' MAIN FUNCTION '''


  def main():
      try:
          ids = demisto.args().get('ids')
          res = demisto.executeCommand("deleteRelationships", {'relationshipsIDsKey': ids})
          if is_error(res[0]):
              raise Exception("Error in DeleteIndicatorRelationships command - {}".format(res[0]["Contents"]))
          hr = f"The relationships {str(ids)} were deleted successfully."
          return_results(CommandResults(readable_output=hr))
      except Exception as ex:
          return_error(f'Failed to execute DeleteIndicatorRelationships. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('DeleteIndicatorRelationships', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- basescript
type: python

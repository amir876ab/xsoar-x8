args:
- default: true
  description: Entry ID with PDF file.
  name: entryID
  required: true
- description: Password of PDF file.
  name: password
  required: true
  secret: true
comment: Removing the password protection from a PDF file and adding a new file entry
  with the unlocked PDF.
commonfields:
  id: PDFUnlocker
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.12.47
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/readpdf:1.0.0.77212
enabled: true
engineinfo: {}
mainengineinfo: {}
name: PDFUnlocker
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('PDFUnlocker', 'start', __line__())
  ### pack version: 1.12.47


  from pikepdf import Pdf, PasswordError


  def unlock_pdf(args: dict):
      res = demisto.getFilePath(args.get('entryID'))
      origin_path = res['path']
      output_name = "UNLOCKED_" + res['name']

      try:
          with Pdf.open(origin_path, password=str(args.get("password"))) as unlocked_pdf:
              unlocked_pdf.save(output_name)
          return_results(file_result_existing_file(output_name))
      except PasswordError:
          return_error("Incorrect password. Please provide the correct password.")


  def main():
      args = demisto.args()
      unlock_pdf(args)


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('PDFUnlocker', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags: []
type: python

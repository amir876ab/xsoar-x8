args:
- description: Incident object
  name: incident
- description: Field definition object
  name: field
comment: When you apply this script to an incident field, that incident field is hidden
  for new incidents, and it displays in edit mode.
commonfields:
  id: hideFieldsOnNewIncident
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.12.39
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: hideFieldsOnNewIncident
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('hideFieldsOnNewIncident', 'start', __line__())
  ### pack version: 1.12.39




  def hide_fields_on_new_incident(incident, field):
      """
          You can create a condition for the incident, which is served as a JSON object.
          You can view the original field settings and take necessary action - such as validate that the options are part of
          the global set in the field definition.
          You can view the current form type (new, edit, close) and take necessary action - such as show fields only
          in the close form.

          Args:
              incident: Incident object
              field: Field definition object

          Returns: demisto.results object

      """
      if not incident.get("id"):
          # This is a new incident, hide the field
          demisto.results({"hidden": True, "options": []})
      else:
          # This is an existing incident, we want to show the field, to know which values to display
          # we will take them from the field definition
          options = []
          if "Select" in demisto.get(field, "type"):
              options = demisto.get(field, "selectValues")
          demisto.results({"hidden": False, "options": options})


  def main():  # pragma: no coverage
      incident = demisto.incidents()[0]
      field = demisto.args()['field']
      hide_fields_on_new_incident(incident, field)


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('hideFieldsOnNewIncident', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- field-display
type: python

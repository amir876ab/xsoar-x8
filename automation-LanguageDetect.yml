args:
- default: true
  description: Text to analyse for language detection
  name: text
  required: true
comment: Language detection based on Google's language-detection.
commonfields:
  id: LanguageDetect
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.12.39
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/py3-tools:1.0.0.49703
enabled: true
engineinfo: {}
mainengineinfo: {}
name: LanguageDetect
outputs:
- contextPath: langDetect.lang
  description: Language detection
- contextPath: langDetect.probability
  description: Probability of language detection
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('LanguageDetect', 'start', __line__())
  ### pack version: 1.12.39


  from langdetect import detect_langs


  def detect_language(text):
      res = detect_langs(text)

      md = "### Detected languages (probability):\n"
      langs = []

      for line in res:
          lang = str(line).split(':')[0]
          prob = float(str(line).split(':')[1])
          langs.append({"lang": lang, "probability": prob})
          md += "- " + lang + " (" + str(prob) + ")\n"

      demisto.results({"ContentsFormat": formats["json"], "Type": entryTypes["note"],
                       "Contents": langs, "HumanReadable": md, "EntryContext": {"langDetect": langs}})


  def main():
      text = demisto.args().get('text')
      detect_language(text)


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('LanguageDetect', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- Utility
type: python
